package Orange;

import static org.testng.Assert.assertEquals;

import java.awt.AWTException;
import java.awt.Robot;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.concurrent.TimeUnit;

import javax.swing.event.MenuEvent;
import javax.swing.event.MenuKeyEvent;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.By;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.testng.Assert;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;

public class All_in_one {
	WebDriver x;
	String url="https://opensource-demo.orangehrmlive.com/web/index.php/auth/login";
	
	@BeforeTest
	public void launch() throws InterruptedException {
		WebDriverManager.chromedriver().setup();
		x=new ChromeDriver();
		x.get(url);
		x.manage().window().maximize();
		x.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);
		
		
	}
	@Test(enabled=true,priority=0)
	public void login() {
		x.findElement(By.name("username")).sendKeys("Admin");
		x.findElement(By.name("password")).sendKeys("admin123");
		x.findElement(By.className("oxd-button")).click();
	}
	@Test(enabled = false,priority = 1)
	public void valid() throws InterruptedException {
		System.out.println(x.getTitle());
		String act=x.getTitle();
		String cur="OrangeHRM";
		Assert.assertEquals(act, cur);
		
		//links
		
		List<WebElement> links=x.findElements(By.tagName("a"));
		for(int i=0;i<links.size();i++) {
			System.out.println(links.get(i).getText());
		}
		System.out.println(links.size());
		Thread.sleep(2000);
	}
	@Test(enabled = false,priority = 2,dataProvider = "avi")
	public void data_login(String a,String b) throws InterruptedException {
		x.findElement(By.xpath("//*[@name='username']")).sendKeys(a);
		x.findElement(By.xpath("//*[@name='password']")).sendKeys(b);
		x.findElement(By.xpath("//*[@type='submit']")).click();
		Thread.sleep(2000);
		
	}
	@DataProvider
	public Object[][] avi(){
		return new Object[][] {
			new Object[] {"ad","ad1"},
			new Object[] {"avi","avinasha"},
			new Object[] {"Admin","admin123"}};
	}
	@Test(enabled = false,priority = 3)
	public void Scroll() throws AWTException, InterruptedException {
		Robot y=new Robot();
		y.keyPress(MenuKeyEvent.VK_DOWN);
		Thread.sleep(2000);
	}
	@Test(enabled = false,priority=4)
	public void composite_action() throws AWTException, InterruptedException {
		Actions b=new Actions(x);
		b.moveToElement(x.findElement(By.xpath("//*[@placeholder='Search']"))).click().sendKeys("Admin").build().perform();
		Thread.sleep(2000);
		x.findElement(By.xpath("(//*[@class='oxd-text oxd-text--span oxd-main-menu-item--name'])[1]")).click();
		Thread.sleep(5000);
	}
	@Test(enabled = false,priority = 5)
	public void logout() {
		x.findElement(By.xpath("(//*[@class='oxd-icon bi-caret-down-fill oxd-userdropdown-icon'])[1]")).click();
		x.findElement(By.xpath("(//*[@class='oxd-userdropdown-link'])[4]")).click();
	}
	@Test(enabled = false,priority = 6)
	public void context_Click() throws AWTException {
		Actions a=new Actions(x);
		a.contextClick().build().perform();
		Robot b=new Robot();
		b.keyPress(MenuKeyEvent.VK_DOWN);
		b.keyPress(MenuKeyEvent.VK_ENTER);
	}
	@Test(enabled = true,priority = 7)
	public void tab_handling() throws AWTException, InterruptedException, IOException {
		WebElement a=x.findElement(By.xpath("(//*[@class='oxd-text oxd-text--span oxd-main-menu-item--name'])[1]"));
		Actions ac=new Actions(x);
		ac.contextClick(a).build().perform();
		Robot r=new Robot();
		r.keyPress(MenuKeyEvent.VK_DOWN);
		r.keyPress(MenuKeyEvent.VK_ENTER);
		Thread.sleep(6000);
		ArrayList<String> tab=new ArrayList<String>(x.getWindowHandles());
		x.switchTo().window(tab.get(1));
		x.close();
		Thread.sleep(6000);
		ArrayList<String> tab1=new ArrayList<String>(x.getWindowHandles());
		x.switchTo().window(tab1.get(0));
		Thread.sleep(5000);
		
		//Screenshoot
		
		File anu=((TakesScreenshot)x).getScreenshotAs(OutputType.FILE);
		FileUtils.copyFile(anu, new File("F:/New folder/avi.png"));
		Thread.sleep(5000);
	}

}

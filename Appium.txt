package Appium_Native;

import java.net.MalformedURLException;
import java.util.concurrent.TimeUnit;

import javax.swing.text.Element;

import org.openqa.selenium.By;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import io.appium.java_client.MobileBy;
import io.appium.java_client.MobileElement;
import io.appium.java_client.TouchAction;
import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.android.AndroidElement;
import io.appium.java_client.android.nativekey.AndroidKey;
import io.appium.java_client.android.nativekey.KeyEvent;
import io.appium.java_client.touch.LongPressOptions;
import io.appium.java_client.touch.TapOptions;
import static io.appium.java_client.touch.TapOptions.*;
import static io.appium.java_client.touch.offset.ElementOption.element;
import static io.appium.java_client.touch.LongPressOptions.longPressOptions;
import static java.time.Duration.ofSeconds;

public class App_Demo extends Capabality_Java {
	AndroidDriver<AndroidElement> a;
	
	@BeforeTest
	public void t1() throws MalformedURLException {
		a=nine();
		a.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);
		
	}
	
	//@Test(enabled = true ,priority = 0)
	public void t2() {
		a.findElement(MobileBy.AccessibilityId("Accessibility")).click();
		a.findElement(MobileBy.AccessibilityId("Custom View")).click();
		a.pressKey(new KeyEvent(AndroidKey.BACK));
		a.pressKey(new KeyEvent(AndroidKey.BACK));
	}
	@Test(enabled = false,priority = 1)
	public void notification() throws InterruptedException {
		a.openNotifications();
		Thread.sleep(2000);
		a.findElements(By.className("android.widget.TextView")).get(1).click();
	}
	@Test(enabled = false,priority = 2)
	public void Scroll() {
		a.findElement(MobileBy.AccessibilityId("Views")).click();
		//a.findElementByAndroidUIAutomator("new UiScrollable(new UiSelector()).ScrollIntoView()");
		//a.findElementByAndroidUIAutomator("new UiScrollable(new UiSelector()).scrollIntoView(text(\"WebView\"))").click();
		//a.findElementByAndroidUIAutomator("new UiScrollable(new UiSelector()).scrollIntoView(text(\"\"))").click();
		a.findElementByAndroidUIAutomator("new UiScrollable(new UiSelector()).scrollIntoView(text(\"Switches\"))").click();
	}
	@Test(enabled = false, priority = 3)
	public void Long_Press() {
		a.findElement(MobileBy.AccessibilityId("Views")).click();
		AndroidElement q= a.findElement(MobileBy.AccessibilityId("Expandable Lists"));
		TouchAction s=new TouchAction(a);
		s.tap(tapOptions().withElement(element(q))).perform();
		a.findElement(MobileBy.AccessibilityId("1. Custom Adapter")).click();
		AndroidElement w=a.findElement(By.xpath("//*[@text='Fish Names']"));
		s.longPress(longPressOptions().withElement(element(w)).withDuration(ofSeconds(3))).release().perform();
		
	}
	@Test(enabled = false,priority = 4)
	public void Swipe() throws InterruptedException {
		a.findElement(MobileBy.AccessibilityId("Views")).click();
		Thread.sleep(1000);
		//a.findElementByAndroidUIAutomator("new UiScrollable(new UiSelector()).scrollIntoView(text(\"Date Widget\"))").click();
		a.findElement(MobileBy.AccessibilityId("Date Widgets")).click();
		Thread.sleep(1000);
		a.findElement(MobileBy.AccessibilityId("2. Inline")).click();
		Thread.sleep(1000);
		AndroidElement q=a.findElement(MobileBy.AccessibilityId("12"));
		AndroidElement w=a.findElement(MobileBy.AccessibilityId("4"));
		TouchAction k=new TouchAction(a);
		k.longPress(longPressOptions().withElement(element(q)).withDuration(ofSeconds(3))).moveTo(element(w)).release().perform();
		
	}
	@Test(enabled = true,priority = 5)
	public void Drap_down() {
		a.findElement(MobileBy.AccessibilityId("Views")).click();
		a.findElement(MobileBy.AccessibilityId("Drag and Drop")).click();
		AndroidElement k=a.findElement(By.id("io.appium.android.apis:id/drag_dot_1"));
		AndroidElement k1=a.findElement(By.id("io.appium.android.apis:id/drag_dot_2"));
		TouchAction g=new TouchAction(a);
		g.longPress(longPressOptions().withElement(element(k)).withDuration(ofSeconds(3))).moveTo(element(k1)).release().perform();
		
	}
}
